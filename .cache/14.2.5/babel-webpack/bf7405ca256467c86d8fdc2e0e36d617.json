{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nicos/Dev/poc/poc-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { liveQuery } from 'dexie';\nimport { db } from 'src/services/db';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/crud-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction ItemListComponent_ng_container_9_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \" \");\n  }\n}\n\nfunction ItemListComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ItemListComponent_ng_container_9_li_1_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.title);\n  }\n}\n\nexport class ItemListComponent {\n  constructor(cdr, crudApiService) {\n    this.cdr = cdr;\n    this.crudApiService = crudApiService; // Observe an arbritary query:\n\n    this.todoItems$ = liveQuery(() => this.listTodoItems());\n    this.itemName = 'My new item';\n  }\n\n  listTodoItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield db.todoItems.where({\n        todoListId: _this.todoList.id\n      }).toArray();\n    })();\n  }\n\n  addItem() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.crudApiService.NewListRessouce(_this2.todoList.title, _this2.itemName).pipe().subscribe(() => {\n        _this2.getTodoItemsFromListNameAPI();\n      });\n    })();\n  }\n\n  getTodoItemsFromListNameAPI() {\n    this.crudApiService.GetCrucrudInfos(this.todoList.title).pipe().subscribe(todoItems => {\n      this.todoList.todoItems = todoItems;\n      this.cdr.detectChanges();\n    });\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n}\n\nItemListComponent.ɵfac = function ItemListComponent_Factory(t) {\n  return new (t || ItemListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.CrudApiService));\n};\n\nItemListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemListComponent,\n  selectors: [[\"item-list\"]],\n  inputs: {\n    todoList: \"todoList\"\n  },\n  decls: 10,\n  vars: 4,\n  consts: [[\"autocomplete\", \"off\", \"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"]],\n  template: function ItemListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \" Todo : \");\n      i0.ɵɵelementStart(4, \"input\", 0, 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ItemListComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.itemName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ItemListComponent_Template_button_click_6_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(7, \"Add Todo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\");\n      i0.ɵɵtemplate(9, ItemListComponent_ng_container_9_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List : \", ctx.todoList.title, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.itemName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todoList.todoItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpdGVtLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":";AAAA,SAAkCA,iBAAlC,QAA6E,eAA7E;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,EAAT,QAAuC,iBAAvC;;;;;;;;ICWQC;IAAwBA;IAAiBA;;;;;IAAjBA;IAAAA;;;;;;IAD5BA;IACIA;IACJA;;;;;IADSA;IAAAA;;;;ADDb,OAAM,MAAOC,iBAAP,CAAwB;EAG5BC,YACUC,GADV,EAEUC,cAFV,EAEwC;IAD9B;IACA,qCAA8B,CAExC;;IACA,kBAAaN,SAAS,CAAC,MAAM,KAAKO,aAAL,EAAP,CAAtB;IA8BA,gBAAW,aAAX;EAjC8C;;EAKxCA,aAAa;IAAA;;IAAA;MACjB,aAAaN,EAAE,CAACO,SAAH,CACVC,KADU,CACJ;QACLC,UAAU,EAAE,KAAI,CAACC,QAAL,CAAcC;MADrB,CADI,EAIVC,OAJU,EAAb;IADiB;EAMlB;;EAEKC,OAAO;IAAA;;IAAA;MACX,MAAI,CAACR,cAAL,CAAoBS,eAApB,CAAoC,MAAI,CAACJ,QAAL,CAAcK,KAAlD,EAAyD,MAAI,CAACC,QAA9D,EAAwEC,IAAxE,GACEC,SADF,CACY,MAAK;QACf,MAAI,CAACC,2BAAL;MACD,CAHD;IADW;EAKZ;;EAEOA,2BAA2B;IACjC,KAAKd,cAAL,CAAoBe,eAApB,CAAoC,KAAKV,QAAL,CAAcK,KAAlD,EAAyDE,IAAzD,GACEC,SADF,CACaX,SAAD,IAA0B;MACpC,KAAKG,QAAL,CAAcH,SAAd,GAA0BA,SAA1B;MAEA,KAAKH,GAAL,CAASiB,aAAT;IACD,CALD;EAMD;;EAEDC,OAAO,CAACC,KAAD,EAAc;IACnB,OAAOA,KAAP;EACD;;AApC2B;;;mBAAjBrB,mBAAiBD;AAAA;;;QAAjBC;EAAiBsB;EAAAC;IAAAf;EAAA;EAAAgB;EAAAC;EAAAC;EAAAC;IAAA;MCZ9B5B;MAAIA;MAA2BA;MAK/BA;MACIA;MACAA;MAAsDA;QAAA;MAAA;MAAtDA;MAEJA;MAAsBA;QAAA,OAAS6B,aAAT;MAAkB,CAAlB;MAAoB7B;MAAQA;MAElDA;MACIA;MAGJA;;;;MAfIA;MAAAA;MAOsDA;MAAAA;MAKvBA;MAAAA,iDAAuB,cAAvB,EAAuB6B,WAAvB","names":["ChangeDetectorRef","liveQuery","db","i0","ItemListComponent","constructor","cdr","crudApiService","listTodoItems","todoItems","where","todoListId","todoList","id","toArray","addItem","NewListRessouce","title","itemName","pipe","subscribe","getTodoItemsFromListNameAPI","GetCrucrudInfos","detectChanges","trackBy","index","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\item-list\\item-list.component.ts","C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\item-list\\item-list.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { liveQuery } from 'dexie';\r\nimport { db, TodoItem, TodoList } from 'src/services/db';\r\n\r\nimport { CrudApiService } from '../../../../services/crud-api.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'item-list',\r\n  templateUrl: './item-list.component.html',\r\n  styleUrls: ['./item-list.component.scss'],\r\n})\r\nexport class ItemListComponent {\r\n  @Input() todoList!: TodoList;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private crudApiService: CrudApiService,) { }\r\n\r\n  // Observe an arbritary query:\r\n  todoItems$ = liveQuery(() => this.listTodoItems());\r\n\r\n  async listTodoItems() {\r\n    return await db.todoItems\r\n      .where({\r\n        todoListId: this.todoList.id,\r\n      })\r\n      .toArray();\r\n  }\r\n\r\n  async addItem() {\r\n    this.crudApiService.NewListRessouce(this.todoList.title, this.itemName).pipe(\r\n    ).subscribe(() => {\r\n      this.getTodoItemsFromListNameAPI()\r\n    })\r\n  }\r\n\r\n  private getTodoItemsFromListNameAPI() {\r\n    this.crudApiService.GetCrucrudInfos(this.todoList.title).pipe(\r\n    ).subscribe((todoItems: TodoItem[]) => {\r\n      this.todoList.todoItems = todoItems\r\n\r\n      this.cdr.detectChanges()\r\n    })\r\n  }\r\n\r\n  trackBy(index: number) {\r\n    return index;\r\n  }\r\n\r\n  itemName = 'My new item';\r\n}\r\n","<h3>List : {{ todoList.title }}</h3>\r\n\r\n<!--\r\n    Adding item form\r\n-->\r\n<label>\r\n    Todo :\r\n    <input autocomplete=\"off\" type=\"text\" id=\"name\" #name [(ngModel)]=\"itemName\" />\r\n</label>\r\n<button type=\"submit\" (click)=\"addItem()\">Add Todo</button>\r\n\r\n<ul>\r\n    <ng-container *ngFor=\"let item of todoList.todoItems; trackBy: trackBy\">\r\n        <li *ngIf=\"item.title\"> {{ item.title }} </li>\r\n    </ng-container>\r\n</ul>\r\n\r\n<!-- <ul>\r\n    <li *ngFor=\"let item of todoItems$ | async\">\r\n        {{ item.title }}\r\n    </li>\r\n</ul> -->"]},"metadata":{},"sourceType":"module"}