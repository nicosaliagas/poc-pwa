{"ast":null,"code":"import { liveQuery } from 'dexie';\nimport { forkJoin, from, map, switchMap } from 'rxjs';\nimport { db, ISynchroRecordType } from 'src/services/db';\nimport * as i0 from \"@angular/core\";\nexport let CrudDbService = /*#__PURE__*/(() => {\n  class CrudDbService {\n    getRecords() {\n      return from(liveQuery(() => db.todoLists.toArray())).pipe(map(lists => lists.map(list => {\n        const listeName = list.title;\n        return db.todoItems.where({\n          todoListId: list.id\n        }).toArray().then(todoItems => {\n          return {\n            id: list.id,\n            title: listeName,\n            todoItems: todoItems\n          };\n        });\n      })), switchMap(newListsObservables => {\n        return forkJoin(newListsObservables);\n      }));\n    }\n\n    addList(listName) {\n      return from(db.todoLists.add({\n        title: listName,\n        recordType: ISynchroRecordType.ADD\n      }));\n    }\n\n    resetDatabase() {\n      return from(db.resetDatabase());\n    }\n\n  }\n\n  CrudDbService.ɵfac = function CrudDbService_Factory(t) {\n    return new (t || CrudDbService)();\n  };\n\n  CrudDbService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudDbService,\n    factory: CrudDbService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudDbService;\n})();","map":null,"metadata":{},"sourceType":"module"}