{"ast":null,"code":"import { HttpService, SkipHeaders } from 'cocori-ng/src/feature-core';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./environment.service\";\nimport * as i2 from \"cocori-ng/src/feature-core\";\nexport let DatasetsService = /*#__PURE__*/(() => {\n  class DatasetsService {\n    constructor(httpService, environmentService) {\n      this.httpService = httpService;\n      this.environmentService = environmentService;\n      this.listCountries = \"countries\";\n    }\n\n    InitListCountries() {\n      console.log(\"ðŸ’ª InitListCountry\");\n      const listCountryApis = [];\n      const listCountryDatas = [{\n        \"name\": \"China\"\n      }, {\n        \"name\": \"Albania\"\n      }, {\n        \"name\": \"Thailand\"\n      }, {\n        \"name\": \"France\"\n      }, {\n        \"name\": \"Ireland\"\n      }, {\n        \"name\": \"Syria\"\n      }, {\n        \"name\": \"Indonesia\"\n      }, {\n        \"name\": \"Brazil\"\n      }, {\n        \"name\": \"Peru\"\n      }, {\n        \"name\": \"Brazil\"\n      }];\n      listCountryDatas.forEach(data => {\n        listCountryApis.push(this.httpService.post(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${this.listCountries}`, {\n          \"name\": data.name\n        }, SkipHeaders.TRUE));\n      });\n      return forkJoin(listCountryApis);\n    }\n\n    GetListCountries() {\n      return this.httpService.get(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${this.listCountries}`, {}, SkipHeaders.TRUE);\n    }\n\n  }\n\n  DatasetsService.Éµfac = function DatasetsService_Factory(t) {\n    return new (t || DatasetsService)(i0.ÉµÉµinject(HttpService), i0.ÉµÉµinject(i1.EnvironmentService));\n  };\n\n  DatasetsService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: DatasetsService,\n    factory: DatasetsService.Éµfac,\n    providedIn: 'root'\n  });\n  return DatasetsService;\n})();","map":null,"metadata":{},"sourceType":"module"}