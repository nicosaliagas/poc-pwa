{"ast":null,"code":"import { fromEvent, map, merge, of, Subject, Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport var IConnectionStatusValue = /*#__PURE__*/(() => {\n  (function (IConnectionStatusValue) {\n    IConnectionStatusValue[\"ONLINE\"] = \"online\";\n    IConnectionStatusValue[\"OFFLINE\"] = \"offline\";\n  })(IConnectionStatusValue || (IConnectionStatusValue = {}));\n\n  return IConnectionStatusValue;\n})();\nexport let ConnectionStatusService = /*#__PURE__*/(() => {\n  class ConnectionStatusService {\n    constructor() {\n      this.onConnectionStatutUpdated = new Subject(); // private networkStatus: boolean = false;\n\n      this.networkStatus$ = Subscription.EMPTY;\n      this.CheckNetworkStatus();\n    }\n\n    CheckNetworkStatus() {\n      // this.networkStatus = navigator.onLine;\n      this.networkStatus$ = merge(of(null), fromEvent(window, 'online'), fromEvent(window, 'offline')).pipe(map(() => navigator.onLine)).subscribe(status => {\n        console.log('status', status); // this.networkStatus = status;\n\n        this.onConnectionStatutUpdated.next(status ? IConnectionStatusValue.ONLINE : IConnectionStatusValue.OFFLINE);\n      });\n    }\n\n  }\n\n  ConnectionStatusService.ɵfac = function ConnectionStatusService_Factory(t) {\n    return new (t || ConnectionStatusService)();\n  };\n\n  ConnectionStatusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectionStatusService,\n    factory: ConnectionStatusService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConnectionStatusService;\n})();","map":null,"metadata":{},"sourceType":"module"}