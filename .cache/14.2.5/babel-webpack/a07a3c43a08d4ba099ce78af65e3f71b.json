{"ast":null,"code":"import { HttpService, SkipHeaders } from 'cocori-ng/src/feature-core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./environment.service\";\nimport * as i2 from \"cocori-ng/src/feature-core\";\nexport let CrudApiService = /*#__PURE__*/(() => {\n  class CrudApiService {\n    constructor(httpService, environmentService) {\n      this.httpService = httpService;\n      this.environmentService = environmentService;\n      this.onCompteUpdated = new Subject();\n    }\n\n    GetCrucrudInfos(listName) {\n      return this.httpService.get(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${listName}`, {}, SkipHeaders.TRUE);\n    }\n\n    NewListRessouce(listName, itemTitle) {\n      let datas;\n\n      if (listName && itemTitle) {\n        datas = {\n          title: itemTitle\n        };\n      }\n\n      return this.httpService.post(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${listName}?ngsw-bypass&toto`, datas, SkipHeaders.TRUE); // var subject = new Subject<any>();\n      // this.httpService.post(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${listName}`, datas, SkipHeaders.TRUE).pipe(\n      //     catchError((err) => {\n      //         console.log(\"ðŸ¤®ðŸ¤®ðŸ¤®ðŸ¤®\", datas)\n      //         return throwError(() => err.error);\n      //     })\n      // ).subscribe((datas: any) => {\n      //     console.log(\"datas >>\", datas)\n      //     subject.next(datas);\n      // })\n      // return subject.asObservable();\n    }\n\n    DeleteListRessource(listName) {\n      return this.httpService.delete(`https://crudcrud.com/api/${this.environmentService.crudcrudKey}/${listName}`, {}, SkipHeaders.TRUE);\n    }\n\n  }\n\n  CrudApiService.Éµfac = function CrudApiService_Factory(t) {\n    return new (t || CrudApiService)(i0.ÉµÉµinject(HttpService), i0.ÉµÉµinject(i1.EnvironmentService));\n  };\n\n  CrudApiService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: CrudApiService,\n    factory: CrudApiService.Éµfac,\n    providedIn: 'root'\n  });\n  return CrudApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}