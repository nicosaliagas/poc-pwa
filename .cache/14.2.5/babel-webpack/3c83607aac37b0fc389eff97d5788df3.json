{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nicos/Dev/poc/poc-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { liveQuery } from 'dexie';\nimport { db } from 'src/services/db';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction ItemListComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \" \");\n  }\n}\n\nexport class ItemListComponent {\n  constructor() {\n    // Observe an arbritary query:\n    this.todoItems$ = liveQuery(() => this.listTodoItems());\n    this.itemName = 'My new item';\n  }\n\n  listTodoItems() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield db.todoItems.where({\n        todoListId: _this.todoList.id\n      }).toArray();\n    })();\n  }\n\n  addItem() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield db.todoItems.add({\n        title: _this2.itemName,\n        todoListId: _this2.todoList.id\n      });\n    })();\n  }\n\n}\n\nItemListComponent.ɵfac = function ItemListComponent_Factory(t) {\n  return new (t || ItemListComponent)();\n};\n\nItemListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemListComponent,\n  selectors: [[\"item-list\"]],\n  inputs: {\n    todoList: \"todoList\"\n  },\n  decls: 11,\n  vars: 5,\n  consts: [[\"autocomplete\", \"off\", \"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ItemListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \" Todo : \");\n      i0.ɵɵelementStart(4, \"input\", 0, 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ItemListComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.itemName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ItemListComponent_Template_button_click_6_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(7, \"Add Todo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\");\n      i0.ɵɵtemplate(9, ItemListComponent_li_9_Template, 2, 1, \"li\", 3);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List : \", ctx.todoList.title, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.itemName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 3, ctx.todoItems$));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpdGVtLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,EAAT,QAA6B,iBAA7B;;;;;;;ICeIC;IACIA;IACJA;;;;;IADIA;IAAAA;;;;ADTR,OAAM,MAAOC,iBAAP,CAAwB;EAL9BC;IAOE;IACA,kBAAaJ,SAAS,CAAC,MAAM,KAAKK,aAAL,EAAP,CAAtB;IAiBA,gBAAW,aAAX;EACD;;EAhBOA,aAAa;IAAA;;IAAA;MACjB,aAAaJ,EAAE,CAACK,SAAH,CACVC,KADU,CACJ;QACLC,UAAU,EAAE,KAAI,CAACC,QAAL,CAAcC;MADrB,CADI,EAIVC,OAJU,EAAb;IADiB;EAMlB;;EAEKC,OAAO;IAAA;;IAAA;MACX,MAAMX,EAAE,CAACK,SAAH,CAAaO,GAAb,CAAiB;QACrBC,KAAK,EAAE,MAAI,CAACC,QADS;QAErBP,UAAU,EAAE,MAAI,CAACC,QAAL,CAAcC;MAFL,CAAjB,CAAN;IADW;EAKZ;;AAlB2B;;;mBAAjBP;AAAiB;;;QAAjBA;EAAiBa;EAAAC;IAAAR;EAAA;EAAAS;EAAAC;EAAAC;EAAAC;IAAA;MCT9BnB;MAAIA;MAA2BA;MAK/BA;MACIA;MACAA;MAAsDA;QAAA;MAAA;MAAtDA;MAEJA;MAAsBA;QAAA,OAASoB,aAAT;MAAkB,CAAlB;MAAoBpB;MAAQA;MAOlDA;MACIA;;MAGJA;;;;MApBIA;MAAAA;MAOsDA;MAAAA;MAUjCA;MAAAA","names":["liveQuery","db","i0","ItemListComponent","constructor","listTodoItems","todoItems","where","todoListId","todoList","id","toArray","addItem","add","title","itemName","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\item-list\\item-list.component.ts","C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\item-list\\item-list.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { liveQuery } from 'dexie';\r\nimport { db, TodoList } from 'src/services/db';\r\n\r\n@Component({\r\n  selector: 'item-list',\r\n  templateUrl: './item-list.component.html',\r\n  styleUrls: ['./item-list.component.scss'],\r\n})\r\nexport class ItemListComponent {\r\n  @Input() todoList!: TodoList;\r\n  // Observe an arbritary query:\r\n  todoItems$ = liveQuery(() => this.listTodoItems());\r\n\r\n  async listTodoItems() {\r\n    return await db.todoItems\r\n      .where({\r\n        todoListId: this.todoList.id,\r\n      })\r\n      .toArray();\r\n  }\r\n\r\n  async addItem() {\r\n    await db.todoItems.add({\r\n      title: this.itemName,\r\n      todoListId: this.todoList.id,\r\n    });\r\n  }\r\n\r\n  itemName = 'My new item';\r\n}\r\n","<h3>List : {{ todoList.title }}</h3>\r\n\r\n<!--\r\n    Adding item form\r\n-->\r\n<label>\r\n    Todo :\r\n    <input autocomplete=\"off\" type=\"text\" id=\"name\" #name [(ngModel)]=\"itemName\" />\r\n</label>\r\n<button type=\"submit\" (click)=\"addItem()\">Add Todo</button>\r\n\r\n<!--\r\n\r\n    Rendering $items - a liveQuery property\r\n\r\n-->\r\n<ul>\r\n    <li *ngFor=\"let item of todoItems$ | async\">\r\n        {{ item.title }}\r\n    </li>\r\n</ul>"]},"metadata":{},"sourceType":"module"}