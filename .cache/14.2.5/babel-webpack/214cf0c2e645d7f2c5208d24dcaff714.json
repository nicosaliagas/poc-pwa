{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nicos/Dev/poc/poc-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { db } from './db';\nimport * as i0 from \"@angular/core\";\nexport let CacheableService = /*#__PURE__*/(() => {\n  class CacheableService {\n    cacheable(fn, key, defaultValue) {\n      return _asyncToGenerator(function* () {\n        let result;\n\n        try {\n          // retrieve the data from backend.\n          result = yield fn(); // save the data to localStorage.\n          // localStorage.setItem(key, JSON.stringify(result));\n\n          yield db.cacheable.add({\n            key: key,\n            value: JSON.stringify(result)\n          }, key);\n          console.log(\"from api\");\n        } catch {\n          // if failed to retrieve the data from backend, try localStorage.\n          const cached = localStorage.getItem(key); // use the cached data if available, otherwise the default value.\n\n          result = cached ? JSON.parse(cached) : defaultValue;\n          console.log(\"from local\");\n        }\n\n        return result;\n      })();\n    }\n\n  }\n\n  CacheableService.ɵfac = function CacheableService_Factory(t) {\n    return new (t || CacheableService)();\n  };\n\n  CacheableService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CacheableService,\n    factory: CacheableService.ɵfac,\n    providedIn: 'root'\n  });\n  return CacheableService;\n})();","map":null,"metadata":{},"sourceType":"module"}