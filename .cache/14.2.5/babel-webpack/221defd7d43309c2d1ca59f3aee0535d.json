{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nicos/Dev/poc/poc-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { liveQuery } from 'dexie';\nimport { from, map, mergeMap, toArray } from 'rxjs';\nimport { db } from 'src/services/db';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/crud-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./item-list/item-list.component\";\n\nfunction HomeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµelement(1, \"item-list\", 6);\n    i0.ÉµÉµelementEnd();\n  }\n\n  if (rf & 2) {\n    const todoList_r2 = ctx.$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"todoList\", todoList_r2);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(crudApiService) {\n      this.crudApiService = crudApiService;\n      this.todoLists$ = liveQuery(() => db.todoLists.toArray());\n      this.listName = 'My new list';\n      this.lists = [];\n    }\n\n    ngOnInit() {\n      // from([1,2,3,4]).pipe(\n      //   mergeMap(param => this.getListTodos(param))\n      // ).subscribe(val => console.log(val));\n\n      /** all the lists created */\n      this.crudApiService.GetCrucrudInfos('').pipe(mergeMap(lists => // `from` emits each contact separately\n      from(lists).pipe( // load each contact\n      mergeMap(list => this.getListTodos(list)), // collect all contacts into an array\n      toArray(), // add the newly fetched data to original result\n      map(list => ({ ...this.lists,\n        list\n      }))))).subscribe(datas => {\n        console.log(\"datas >>>>>>>>>>> \", datas);\n      });\n    }\n\n    getListTodos(list) {\n      var obj = {};\n      console.log(\"list >> \", list); // return of(`retrieved new data with param ${list}`).pipe(\n      //   delay(1000)\n      // )\n\n      return this.crudApiService.GetCrucrudInfos(list).pipe(map(datas => {\n        obj[list] = datas;\n        console.log(\"ðŸ’© \", list, obj);\n        return obj;\n      }) // return ({name: datas})})\n      );\n    }\n\n    addNewList() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield db.todoLists.add({\n          title: _this.listName\n        });\n\n        _this.crudApiService.NewRessouce(_this.listName).pipe().subscribe(datas => {\n          console.log(\"datas >>> \", datas);\n        });\n      })();\n    }\n\n    resetDatabase() {\n      return _asyncToGenerator(function* () {\n        yield db.resetDatabase();\n      })();\n    }\n\n    identifyList(index, list) {\n      return `${list.id}${list.title}`;\n    }\n\n  }\n\n  HomeComponent.Éµfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ÉµÉµdirectiveInject(i1.CrudApiService));\n  };\n\n  HomeComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"page-home\"]],\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"newListContainer\", 2, \"margin-top\", \"30px\"], [\"autocomplete\", \"off\", \"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"click\"], [3, \"todoList\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ÉµÉµtext(2, \"New List : \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"label\");\n        i0.ÉµÉµtext(4, \" List : \");\n        i0.ÉµÉµelementStart(5, \"input\", 1, 2);\n        i0.ÉµÉµlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.listName = $event;\n        });\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(7, \"button\", 3);\n        i0.ÉµÉµlistener(\"click\", function HomeComponent_Template_button_click_7_listener() {\n          return ctx.addNewList();\n        });\n        i0.ÉµÉµtext(8, \"Add new list\");\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµtemplate(9, HomeComponent_div_9_Template, 2, 1, \"div\", 4);\n        i0.ÉµÉµpipe(10, \"async\");\n        i0.ÉµÉµelementStart(11, \"h3\");\n        i0.ÉµÉµtext(12, \"Reset the Database\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(13, \"button\", 5);\n        i0.ÉµÉµlistener(\"click\", function HomeComponent_Template_button_click_13_listener() {\n          return ctx.resetDatabase();\n        });\n        i0.ÉµÉµtext(14, \"Reset Database\");\n        i0.ÉµÉµelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.listName);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngForOf\", i0.ÉµÉµpipeBind1(10, 3, ctx.todoLists$))(\"ngForTrackBy\", ctx.identifyList);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.ItemListComponent, i2.AsyncPipe],\n    styles: [\".newListContainer[_ngcontent-%COMP%]{margin-top:30px;padding-bottom:20px;border-bottom:1px dashed #504f4f}\"],\n    changeDetection: 0\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}