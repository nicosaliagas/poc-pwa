{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { IConnectionStatusValue } from '../../../../services/connection-status.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/crud-db.service\";\nimport * as i2 from \"../../../../services/connection-status.service\";\nimport * as i3 from \"../../../../services/crud-api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction ItemListComponent_ng_container_9_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \" \");\n  }\n}\n\nfunction ItemListComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ItemListComponent_ng_container_9_li_1_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.title);\n  }\n}\n\nexport let ItemListComponent = /*#__PURE__*/(() => {\n  class ItemListComponent {\n    constructor(cdr, crudDbService, connectionStatusService, crudApiService) {\n      this.cdr = cdr;\n      this.crudDbService = crudDbService;\n      this.connectionStatusService = connectionStatusService;\n      this.crudApiService = crudApiService;\n      this.itemName = 'My new item';\n    }\n\n    ngOnInit() {\n      this.connectionStatusService.onConnectionStatutUpdated.subscribe(data => {\n        this.connectionStatus = data;\n      });\n    }\n    /** création de l'item de la liste */\n\n\n    addItem() {\n      if (this.connectionStatus === IConnectionStatusValue.ONLINE) {\n        this.crudApiService.NewListRessouce(this.todoList.title, this.itemName).pipe().subscribe(() => {\n          this.readDatas();\n        });\n      } else {\n        this.crudDbService.addListItem(this.todoList.id, this.itemName).subscribe(() => {\n          this.readDatas();\n        });\n      }\n    }\n\n    readDatas() {\n      if (this.connectionStatus === IConnectionStatusValue.ONLINE) {\n        this.getTodoItemsFromListNameAPI();\n      } else {\n        this.getItemsFromListDb();\n      }\n    }\n\n    getTodoItemsFromListNameAPI() {\n      this.crudApiService.GetCrucrudInfos(this.todoList.title).pipe().subscribe(todoItems => {\n        this.todoList.todoItems = todoItems;\n        this.cdr.detectChanges();\n      });\n    }\n\n    getItemsFromListDb() {\n      this.crudDbService.getItemsFromOneList(this.todoList.id).subscribe(todoItems => {\n        this.todoList.todoItems = todoItems;\n        this.cdr.detectChanges();\n      });\n    }\n\n    trackBy(index) {\n      return index;\n    }\n\n  }\n\n  ItemListComponent.ɵfac = function ItemListComponent_Factory(t) {\n    return new (t || ItemListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.CrudDbService), i0.ɵɵdirectiveInject(i2.ConnectionStatusService), i0.ɵɵdirectiveInject(i3.CrudApiService));\n  };\n\n  ItemListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ItemListComponent,\n    selectors: [[\"item-list\"]],\n    inputs: {\n      todoList: \"todoList\"\n    },\n    decls: 10,\n    vars: 4,\n    consts: [[\"autocomplete\", \"off\", \"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"]],\n    template: function ItemListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\");\n        i0.ɵɵtext(3, \" Todo : \");\n        i0.ɵɵelementStart(4, \"input\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ItemListComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.itemName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ItemListComponent_Template_button_click_6_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(7, \"Add Todo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ul\");\n        i0.ɵɵtemplate(9, ItemListComponent_ng_container_9_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"List : \", ctx.todoList.title, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todoList.todoItems)(\"ngForTrackBy\", ctx.trackBy);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    changeDetection: 0\n  });\n  return ItemListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}