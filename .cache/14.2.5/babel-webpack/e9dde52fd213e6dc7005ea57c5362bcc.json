{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nicos/Dev/poc/poc-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { liveQuery } from 'dexie';\nimport { db } from 'src/services/db';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/crud-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./item-list/item-list.component\";\n\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµelement(1, \"item-list\", 6);\n    i0.ÉµÉµelementEnd();\n  }\n\n  if (rf & 2) {\n    const todoList_r2 = ctx.$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"todoList\", todoList_r2);\n  }\n}\n\nexport class HomeComponent {\n  constructor(crudApiService) {\n    this.crudApiService = crudApiService;\n    this.todoLists$ = liveQuery(() => db.todoLists.toArray());\n    this.listName = 'My new list';\n  }\n\n  ngOnInit() {\n    this.crudApiService.GetCrucrudInfos().pipe().subscribe(val => {\n      console.log(\"ğŸ’€ğŸ’€ >> \", val);\n    });\n  }\n\n  addNewList() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield db.todoLists.add({\n        title: _this.listName\n      });\n\n      _this.crudApiService.PostCrudcrudInfos(_this.listName).pipe().subscribe(datas => {\n        console.log(\"datas >>> \", datas);\n      });\n    })();\n  }\n\n  resetDatabase() {\n    return _asyncToGenerator(function* () {\n      yield db.resetDatabase();\n    })();\n  }\n\n  identifyList(index, list) {\n    return `${list.id}${list.title}`;\n  }\n\n}\n\nHomeComponent.Éµfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ÉµÉµdirectiveInject(i1.CrudApiService));\n};\n\nHomeComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"page-home\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [2, \"margin-top\", \"30px\"], [\"autocomplete\", \"off\", \"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 3, \"click\"], [3, \"click\"], [3, \"todoList\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµtemplate(0, HomeComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ÉµÉµpipe(1, \"async\");\n      i0.ÉµÉµelementStart(2, \"div\", 1)(3, \"h3\");\n      i0.ÉµÉµtext(4, \"New List : \");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(5, \"label\");\n      i0.ÉµÉµtext(6, \" Add new list: \");\n      i0.ÉµÉµelementStart(7, \"input\", 2, 3);\n      i0.ÉµÉµlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.listName = $event;\n      });\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(9, \"button\", 4);\n      i0.ÉµÉµlistener(\"click\", function HomeComponent_Template_button_click_9_listener() {\n        return ctx.addNewList();\n      });\n      i0.ÉµÉµtext(10, \"Add new list\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(11, \"h3\");\n      i0.ÉµÉµtext(12, \"Reset the Database\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(13, \"button\", 5);\n      i0.ÉµÉµlistener(\"click\", function HomeComponent_Template_button_click_13_listener() {\n        return ctx.resetDatabase();\n      });\n      i0.ÉµÉµtext(14, \"Reset Database\");\n      i0.ÉµÉµelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ÉµÉµproperty(\"ngForOf\", i0.ÉµÉµpipeBind1(1, 3, ctx.todoLists$))(\"ngForTrackBy\", ctx.identifyList);\n      i0.ÉµÉµadvance(7);\n      i0.ÉµÉµproperty(\"ngModel\", ctx.listName);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.ItemListComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIn0= */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,EAAT,QAA6B,iBAA7B;;;;;;;;;ICHAC;IACIA;IACJA;;;;;IADeA;IAAAA;;;;ADUf,OAAM,MAAOC,aAAP,CAAoB;EAIxBC,YAAoBC,cAApB,EAAkD;IAA9B;IAHpB,kBAAaL,SAAS,CAAC,MAAMC,EAAE,CAACK,SAAH,CAAaC,OAAb,EAAP,CAAtB;IACA,gBAAW,aAAX;EAEuD;;EAEvDC,QAAQ;IACN,KAAKH,cAAL,CAAoBI,eAApB,GAAsCC,IAAtC,GACEC,SADF,CACaC,GAAD,IAAa;MACvBC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;IACD,CAHD;EAID;;EAEKG,UAAU;IAAA;;IAAA;MACd,MAAMd,EAAE,CAACK,SAAH,CAAaU,GAAb,CAAiB;QACrBC,KAAK,EAAE,KAAI,CAACC;MADS,CAAjB,CAAN;;MAIA,KAAI,CAACb,cAAL,CAAoBc,iBAApB,CAAsC,KAAI,CAACD,QAA3C,EAAqDR,IAArD,GACEC,SADF,CACaS,KAAD,IAAe;QACzBP,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BM,KAA1B;MACD,CAHD;IALc;EASf;;EAEKC,aAAa;IAAA;MACjB,MAAMpB,EAAE,CAACoB,aAAH,EAAN;IADiB;EAElB;;EAEDC,YAAY,CAACC,KAAD,EAAgBC,IAAhB,EAA8B;IACxC,OAAO,GAAGA,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACP,KAAK,EAA9B;EACD;;AA9BuB;;;mBAAbd,eAAaD;AAAA;;;QAAbC;EAAauB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1B5B;;MAGAA,+BAA+B,CAA/B,EAA+B,IAA/B;MACQA;MAAWA;MACfA;MACIA;MACAA;MAAsDA;QAAA;MAAA;MAAtDA;MAEJA;MAAsBA;QAAA,OAAS6B,gBAAT;MAAqB,CAArB;MAAuB7B;MAAYA;MAG7DA;MAAIA;MAAkBA;MACtBA;MAAQA;QAAA,OAAS6B,mBAAT;MAAwB,CAAxB;MAA0B7B;MAAcA;;;;MAbtBA,+DAAuB,cAAvB,EAAuB6B,gBAAvB;MAOoC7B;MAAAA","names":["liveQuery","db","i0","HomeComponent","constructor","crudApiService","todoLists","toArray","ngOnInit","GetCrucrudInfos","pipe","subscribe","val","console","log","addNewList","add","title","listName","PostCrudcrudInfos","datas","resetDatabase","identifyList","index","list","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\nicos\\Dev\\poc\\poc-pwa\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { liveQuery } from 'dexie';\r\nimport { CrudApiService } from 'src/services/crud-api.service';\r\nimport { db, TodoList } from 'src/services/db';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'page-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  todoLists$ = liveQuery(() => db.todoLists.toArray());\r\n  listName = 'My new list';\r\n\r\n  constructor(private crudApiService: CrudApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.crudApiService.GetCrucrudInfos().pipe(\r\n    ).subscribe((val: any) => {\r\n      console.log(\"ğŸ’€ğŸ’€ >> \", val)\r\n    })\r\n  }\r\n\r\n  async addNewList() {\r\n    await db.todoLists.add({\r\n      title: this.listName,\r\n    });\r\n\r\n    this.crudApiService.PostCrudcrudInfos(this.listName).pipe(\r\n    ).subscribe((datas: any) => {\r\n      console.log(\"datas >>> \", datas)\r\n    })\r\n  }\r\n\r\n  async resetDatabase() {\r\n    await db.resetDatabase();\r\n  }\r\n\r\n  identifyList(index: number, list: TodoList) {\r\n    return `${list.id}${list.title}`;\r\n  }\r\n}\r\n","<div *ngFor=\"let todoList of todoLists$ | async; trackBy: identifyList\">\r\n    <item-list [todoList]=\"todoList\"></item-list>\r\n</div>\r\n<div style=\"margin-top: 30px;\">\r\n    <h3>New List : </h3>\r\n    <label>\r\n        Add new list:\r\n        <input autocomplete=\"off\" type=\"text\" id=\"name\" #name [(ngModel)]=\"listName\" />\r\n    </label>\r\n    <button type=\"submit\" (click)=\"addNewList()\">Add new list</button>\r\n</div>\r\n\r\n<h3>Reset the Database</h3>\r\n<button (click)=\"resetDatabase()\">Reset Database</button>"]},"metadata":{},"sourceType":"module"}