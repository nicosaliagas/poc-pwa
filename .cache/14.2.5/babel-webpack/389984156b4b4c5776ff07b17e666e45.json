{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { SynchroService } from '../../../services/synchro.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/connection-status.service\";\nimport * as i2 from \"../../../services/datasets.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction ReadonlyComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", country_r1._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r1.name);\n  }\n}\n\nexport let ReadonlyComponent = /*#__PURE__*/(() => {\n  class ReadonlyComponent {\n    constructor(connectionStatusService, datasetsService, fb, cdr) {\n      this.connectionStatusService = connectionStatusService;\n      this.datasetsService = datasetsService;\n      this.fb = fb;\n      this.cdr = cdr;\n      this.$countries = this.datasetsService.GetListCountries();\n      this.country_name = \"\";\n      this.set_country = \"\";\n      this.countries = [{\n        id: 1,\n        name: \"United States\"\n      }, {\n        id: 2,\n        name: \"Australia\"\n      }, {\n        id: 3,\n        name: \"Canada\"\n      }, {\n        id: 4,\n        name: \"Brazil\"\n      }, {\n        id: 5,\n        name: \"England\"\n      }];\n    }\n\n    ngOnInit() {\n      this.contactForm = this.fb.group({\n        country: [null]\n      });\n      this.setDefaults();\n      this.contactForm.get(\"country\")?.valueChanges.subscribe(f => {\n        this.onCountryChanged(f);\n      });\n    }\n\n    testPerform() {\n      this.$countries.subscribe(countries => {\n        console.log(\"countries | testPerform >> \", countries);\n      });\n    }\n\n    submit() {\n      console.log(\"Form Submitted\");\n      console.log(this.contactForm.value);\n    }\n\n    setDefaults() {\n      this.contactForm.get(\"country\")?.patchValue(null);\n    }\n\n    onCountryChanged(value) {\n      console.log('onCountryChanged');\n      console.log(value);\n    }\n\n    addCountry() {\n      this.datasetsService.PostCountry(this.country_name).subscribe(() => {\n        this.country_name = \"\";\n        this.cdr.detectChanges();\n      });\n    }\n\n    setCountry() {\n      const country = this.countries.find(el => el.name === this.set_country);\n\n      if (country) {\n        this.contactForm.get(\"country\")?.patchValue(country.id);\n      }\n    }\n\n  }\n\n  ReadonlyComponent.ɵfac = function ReadonlyComponent_Factory(t) {\n    return new (t || ReadonlyComponent)(i0.ɵɵdirectiveInject(i1.ConnectionStatusService), i0.ɵɵdirectiveInject(i2.DatasetsService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ReadonlyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadonlyComponent,\n    selectors: [[\"page-readonly\"]],\n    features: [i0.ɵɵProvidersFeature([SynchroService])],\n    decls: 19,\n    vars: 7,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"country\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"ngValue\"]],\n    template: function ReadonlyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ReadonlyComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"p\")(2, \"select\", 1)(3, \"option\", 2);\n        i0.ɵɵtext(4, \"Select Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, ReadonlyComponent_option_5_Template, 2, 2, \"option\", 3);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵtext(8, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"p\")(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadonlyComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.country_name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_11_listener() {\n          return ctx.addCountry();\n        });\n        i0.ɵɵtext(12, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\")(14, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadonlyComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.set_country = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_15_listener() {\n          return ctx.setCountry();\n        });\n        i0.ɵɵtext(16, \"Set Country\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_17_listener() {\n          return ctx.testPerform();\n        });\n        i0.ɵɵtext(18, \"Test Perform GET request\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 5, ctx.$countries));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.country_name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.set_country);\n      }\n    },\n    dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i4.AsyncPipe],\n    styles: [\".newListContainer[_ngcontent-%COMP%]{margin-top:30px;padding-bottom:20px;border-bottom:1px dashed #504f4f}.btnSynchro[_ngcontent-%COMP%]{text-align:center;margin-top:10px}.btnSynchro[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0 5px}\"],\n    changeDetection: 0\n  });\n  return ReadonlyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}