{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { SynchroService } from '../../../services/synchro.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/connection-status.service\";\nimport * as i2 from \"../../../services/datasets.service\";\nimport * as i3 from \"@angular/forms\";\nexport let ReadonlyComponent = /*#__PURE__*/(() => {\n  class ReadonlyComponent {\n    constructor(connectionStatusService, datasetsService, fb, cdr) {\n      this.connectionStatusService = connectionStatusService;\n      this.datasetsService = datasetsService;\n      this.fb = fb;\n      this.cdr = cdr;\n      this.$countries = this.datasetsService.GetListCountries();\n      this.$countriesTwo = this.datasetsService.GetListCountriesTwo();\n      this.country_name = \"\";\n      this.set_country = \"\";\n      this.countries = [{\n        id: 1,\n        name: \"United States\"\n      }, {\n        id: 2,\n        name: \"Australia\"\n      }, {\n        id: 3,\n        name: \"Canada\"\n      }, {\n        id: 4,\n        name: \"Brazil\"\n      }, {\n        id: 5,\n        name: \"England\"\n      }];\n    }\n\n    ngOnInit() {\n      this.contactForm = this.fb.group({\n        country: [null]\n      });\n      this.setDefaults();\n      this.contactForm.get(\"country\")?.valueChanges.subscribe(f => {\n        this.onCountryChanged(f);\n      });\n    }\n\n    testPerform() {\n      this.$countries.subscribe(countries => {\n        console.log(\"countries | testPerform >> \", countries);\n      });\n    }\n\n    testPerformTwo() {\n      this.$countriesTwo.subscribe(countries => {\n        console.log(\"countries | testPerform >> \", countries);\n      });\n    }\n\n    submit() {\n      console.log(\"Form Submitted\");\n      console.log(this.contactForm.value);\n    }\n\n    setDefaults() {\n      this.contactForm.get(\"country\")?.patchValue(null);\n    }\n\n    onCountryChanged(value) {\n      console.log('onCountryChanged');\n      console.log(value);\n    }\n\n    addCountry() {\n      this.datasetsService.PostCountry(this.country_name).subscribe(() => {\n        this.country_name = \"\";\n        this.cdr.detectChanges();\n      });\n    }\n\n    addCountry2() {\n      this.datasetsService.PostCountryTwo(this.country_name).subscribe(() => {\n        this.country_name = \"\";\n        this.cdr.detectChanges();\n      });\n    }\n\n    setCountry() {\n      const country = this.countries.find(el => el.name === this.set_country);\n\n      if (country) {\n        this.contactForm.get(\"country\")?.patchValue(country.id);\n      }\n    }\n\n  }\n\n  ReadonlyComponent.ɵfac = function ReadonlyComponent_Factory(t) {\n    return new (t || ReadonlyComponent)(i0.ɵɵdirectiveInject(i1.ConnectionStatusService), i0.ɵɵdirectiveInject(i2.DatasetsService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ReadonlyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadonlyComponent,\n    selectors: [[\"page-readonly\"]],\n    features: [i0.ɵɵProvidersFeature([SynchroService])],\n    decls: 16,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function ReadonlyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadonlyComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.country_name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_2_listener() {\n          return ctx.addCountry();\n        });\n        i0.ɵɵtext(3, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"p\")(5, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadonlyComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.country_name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_6_listener() {\n          return ctx.addCountry();\n        });\n        i0.ɵɵtext(7, \"Add list 2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\")(9, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadonlyComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.set_country = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_10_listener() {\n          return ctx.setCountry();\n        });\n        i0.ɵɵtext(11, \"Set Country\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_12_listener() {\n          return ctx.testPerform();\n        });\n        i0.ɵɵtext(13, \"GET request\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ReadonlyComponent_Template_button_click_14_listener() {\n          return ctx.testPerformTwo();\n        });\n        i0.ɵɵtext(15, \"GET request Two\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.country_name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.country_name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.set_country);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".newListContainer[_ngcontent-%COMP%]{margin-top:30px;padding-bottom:20px;border-bottom:1px dashed #504f4f}.btnSynchro[_ngcontent-%COMP%]{text-align:center;margin-top:10px}.btnSynchro[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0 5px}\"],\n    changeDetection: 0\n  });\n  return ReadonlyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}